FROM openjdk:11
COPY *.jar ./target
RUN 'sudo apt update'
EXPOSE 9090
ENTRYPOINT ["-java","-jar","*.jar"]


--------------------------

apiVersion: apps/V1
kind: Deployment
metadata;
  name: my-deployment

  matchLables:
      name: my-app
  selectors:
    spec:
    type: loadbalancer
     - containers:
          name: my-container
          image: abhishekgowda123/my-app:1.0
          targetPort: 8080
          port: 8082


--------------------

provider "aws"{
access_key = ""
secret_key = ""
}

resource 'aws-instance'{
ami = ''
instance_type = ''
private_key = ''
region = ''
availability_zone = ''
}

--------------------------->
chown user:group 'file or directoryName'


--------------------------------->
#!/bin/bash

#author: Abhishek L C
#Date: 20/04/2023
#this scrip print outs the PID of ubuntu

set -x

ps -ef | grep ubuntu | awk -F" " '{print $2}'


------------------------->

#!/bin/bash

#author: Abhishek L C
#DATE: 21/04/23
#TO LIST ALL the process id's

set -x #debug mode
set -e
set -o pipefail

pref -ef | awk-F" "  '{print $2}'

---------------------->

#!/bin/bash

#author: Abhishek L C
#Date: 21/04/23
#to print only errors from remote logfile

set -x #debug mode
set -e
set -o pipefail

curl "link of log file" | grep error

------->
 

if [ 'expr $i % 2' == 0]
then
    echo '$i......'
else
    echo 'erros are there'

---------------->

version: 3.7
services:
   
    myapp-01:
      build: .
      conatiner_name:
      image:
      volumes:
    
    myapp-02:
      build: .
      container_name:
      image:
      volumes:



-------------->

version: 3.7
services:

    myapp-01:
     container_name:
     build: .
     image:
     volumes:


    myapp-02:
    build: .
    conatiner_name:
    image:
    volumes:

---------->

version: 3.7
services:

    myapp-01:
    build: .
    image:
    container_name:
    volumes:
    ports:


    myapp-02:
    build: .
    image:
    container_name:
    volumes:
    ports:


-------------------------->

apiVersion: v1/apps
kind: Deployment

metadata:
  name: My-deployment
  labels:
    name: my-pod
    

spec:
 selectors:
   type: nodePort
   image:
   container:
   port:
   target_port:


---------->
apiVersion: v1/apps
kind: Deployment

metadata:
  name: My-deployment
  labels:
  app: my-pod

spec:
 selectors:
   type: LoadBalancer
   replicas: 2
   matchLabels:
        app: my-pod


    spec:
     container:
       - name:
        image:
        port:
        targetPort:
        volumes:



